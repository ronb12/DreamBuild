rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to read their own profile data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to update their own profile
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // User subcollections - users can only access their own subcollections
    match /users/{userId}/{subcollection=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects collection - users can only access their own projects
    match /projects/{projectId} {
      allow read, write: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         request.auth.uid in resource.data.collaborators);
      
      // Allow users to create projects
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.ownerId;
    }
    
    // Code snippets collection - users can only access their own snippets
    match /codeSnippets/{snippetId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Allow users to create snippets
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // AI conversations collection - users can only access their own conversations
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Allow users to create conversations
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Templates collection - public read access for all authenticated users
    match /templates/{templateId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         request.auth.token.admin == true);
    }
    
    // Public collections - read access for all authenticated users
    match /public/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // Admin collections - only admin users can access
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // Analytics collection - users can only access their own analytics
    match /analytics/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Notifications collection - users can only access their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Allow users to create notifications
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Settings collection - users can only access their own settings
    match /settings/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
